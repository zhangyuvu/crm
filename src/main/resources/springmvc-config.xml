<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        https://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd">

    <!--   组件扫描器 -->
    <context:component-scan base-package="com.zy.crm.settings.controller"/>
    <context:component-scan base-package="com.zy.crm.workbench.controller"/>
    <context:component-scan base-package="com.zy.crm.handler" />

    <!--视图解析器 帮助开发人员设置试图文件的路径-->
<!--    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
<!--        &lt;!&ndash;前缀&ndash;&gt;-->
<!--        <property name="prefix" value="/WEB-INF/view/"/>-->
<!--        &lt;!&ndash;后缀&ndash;&gt;-->
<!--        <property name="suffix" value=".jsp"/>-->
<!--    </bean>-->

    <!--加入这个注解驱动后 才会在内存中 也就是容器中生成处理json格式数据的类 -->
    <!--加入该驱动 会在容器中生成处理消息的八个类 没有加入之前只有四个类-->
    <!--想要使用静态资源 这个标签必须有-->
    <mvc:annotation-driven/><!--这个标签可以解决下面这两种控制静态资源文件访问的标签和@RequestMapping的冲突 -->

    <!--这个标签常用于解决静态资源文件访问的问题 框架会创建一个ResourceHttpRequestHandler处理器对象，专门处理静态资源文件的访问 不依赖服务器-->
<!--    <mvc:resources mapping="/static/**" location="/static/" />&lt;!&ndash;将所有的静态资源文件放入static文件夹 可以解决多种静态资源的访问&ndash;&gt;-->

    <!--访问拦截器-->
<!--    <mvc:interceptors>-->
<!--        <mvc:interceptor>-->
<!--            <mvc:mapping path="/**"/>-->
<!--            <bean class="com.zy.crm.handler.LoginInterceptor" />-->
<!--        </mvc:interceptor>-->
<!--    </mvc:interceptors>-->

</beans>
